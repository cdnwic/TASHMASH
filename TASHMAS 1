import React, { useState, useEffect } from 'react';

const TashmashCalculator = () => {
  // מצבים
  const [step, setStep] = useState(1);
  const [tashmashType, setTashmashType] = useState('');
  const [salaries, setSalaries] = useState([
    { gross: '', mandatoryDeductions: '' },
    { gross: '', mandatoryDeductions: '' },
    { gross: '', mandatoryDeductions: '' },
  ]);
  const [bankBalance, setBankBalance] = useState('');
  const [hasCar, setHasCar] = useState(false);
  const [carValue, setCarValue] = useState('');
  const [result, setResult] = useState(null);

  // קבועים
  const CONSTANT_DEDUCTION = 484;
  const DEDUCTION_MULTIPLIER = 0.7;
  const TASHMASH_CEILING = 4997;
  const BANK_BALANCE_THRESHOLD = 44000;
  const BANK_BALANCE_DIVISOR = 150;
  const CAR_VALUE_THRESHOLD = 44611;
  const WORKER_TASHMASH_MIN = 5880;
  const WORKER_TASHMASH_MAX = 6246;

  // חישוב התוצאה
  const calculateResult = () => {
    // בדיקת רכב
    if (hasCar && parseFloat(carValue) > CAR_VALUE_THRESHOLD) {
      setResult({
        eligible: false,
        reason: 'שווי הרכב עולה על 44,611 ש"ח, לכן אין זכאות לתשמ"ש',
        amount: 0,
        calculations: [],
      });
      return;
    }

    // אוסף את נתוני השכר מכל התלושים
    let totalGross = 0;
    let totalMandatoryDeductions = 0;
    const calculations = [];
    let validMonths = 0;

    for (let i = 0; i < 3; i++) {
      if (!salaries[i].gross) continue;

      const grossSalary = parseFloat(salaries[i].gross);
      const mandatoryDeductions = parseFloat(salaries[i].mandatoryDeductions) || 0;

      totalGross += grossSalary;
      totalMandatoryDeductions += mandatoryDeductions;
      validMonths++;

      calculations.push({
        month: i + 1,
        gross: grossSalary,
        mandatoryDeductions: mandatoryDeductions,
      });
    }

    // חישוב ממוצע של כל התלושים ביחד
    const avgGross = totalGross / validMonths;
    const avgMandatoryDeductions = totalMandatoryDeductions / validMonths;

    // חישוב השכר הקובע לאחר ניכויים
    const calculatedIncome = (avgGross - avgMandatoryDeductions - CONSTANT_DEDUCTION) * DEDUCTION_MULTIPLIER;

    // הוספת נתוני החישוב המשוקלל
    calculations.push({
      month: 'ממוצע',
      gross: avgGross,
      mandatoryDeductions: avgMandatoryDeductions,
      constantDeduction: CONSTANT_DEDUCTION,
      multiplier: DEDUCTION_MULTIPLIER,
      calculatedIncome: calculatedIncome,
    });

    const avgIncome = calculatedIncome;

    // בדיקת חשבון בנק
    let additionalIncomeFromBank = 0;
    if (bankBalance && parseFloat(bankBalance) > BANK_BALANCE_THRESHOLD) {
      const excessAmount = parseFloat(bankBalance) - BANK_BALANCE_THRESHOLD;
      additionalIncomeFromBank = Math.floor(excessAmount / BANK_BALANCE_DIVISOR);
    }

    // הכנסה סופית לחישוב
    const finalIncome = avgIncome + additionalIncomeFromBank;

    // בדיקת זכאות לתשמ"ש עובדת
    if (tashmashType === 'worker') {
      if (finalIncome < WORKER_TASHMASH_MIN || finalIncome > WORKER_TASHMASH_MAX) {
        setResult({
          eligible: false,
          reason: `ההכנסה (<span class="math-inline">\{finalIncome\.toFixed\(2\)\} ש"ח\) אינה בטווח הנדרש \(</span>{WORKER_TASHMASH_MIN}-${WORKER_TASHMASH_MAX} ש"ח)`,
          amount: 0,
          calculations,
          avgIncome,
          additionalIncomeFromBank,
          finalIncome,
        });
        return;
      }
    }

    // חישוב סכום התשמ"ש
    let tashmashAmount = 0;
    if (finalIncome < TASHMASH_CEILING) {
      tashmashAmount = TASHMASH_CEILING - finalIncome;
    }

    setResult({
      eligible: tashmashAmount > 0,
      reason: tashmashAmount > 0 ? 'זכאי/ת לתשמ"ש' : 'ההכנסה גבוהה מתקרת התשמ"ש',
      amount: tashmashAmount,
      calculations,
      avgIncome,
      additionalIncomeFromBank,
      finalIncome,
    });
  };

  // מעבר לשלב הבא
  const nextStep = () => {
    setStep(step + 1);
  };

  // חזרה לשלב הקודם
  const prevStep = () => {
    setStep(step - 1);
  };

  // עדכון נתוני שכר
  const updateSalary = (index, field, value) => {
    const newSalaries = [...salaries];
    newSalaries[index] = { ...newSalaries[index], [field]: value };
    setSalaries(newSalaries);
  };

  // ביצוע חישוב בשלב האחרון
  useEffect(() => {
    if (step === 4) {
      calculateResult();
    }
  }, [step]);

  // רקע עם גרדיאנט
  const gradientStyle = {
    background: 'linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%)',
  };

  return (
    <div style={gradientStyle} className="max-w-3xl mx-auto p-6 rounded-xl shadow-lg" dir="rtl">
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <div className="flex items-center justify-center mb-4">
          <div className="bg-blue-500 p-2 rounded-full mr-3">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="white">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h1 className="text-2xl font-bold text-blue-700">מחשבון זכאות לתשמ"ש</h1>
        </div>

        {/* התקדמות */}
        <div className="mb-8">
          <div className="flex items-center justify-between mb-2">
            {[1, 2, 3, 4].map((stepNumber) => (
              <div key={stepNumber} className="flex flex-col items-center">
                <div
                  className={`w-10 h-10 rounded-full flex items-center justify-center transition-all duration-300 ${
                    stepNumber < step ? 'bg-green-500 text-white' : stepNumber === step ? 'bg-blue-500 text-white' : 'bg-gray-200'
                  }`}
                >
                  {stepNumber < step ? (
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                    </svg>
                  ) : (
                    stepNumber
                  )}
                </div>
                <span className={`text-xs mt-1 font-medium ${stepNumber === step ? 'text-blue-500' : 'text-gray-500'}`}>
                  {stepNumber === 1 && 'סוג תשמ"ש'}
                  {stepNumber === 2 && 'פרטי שכר'}
                  {stepNumber === 3 && 'נתונים נוספים'}
                  {stepNumber === 4 && 'תוצאות'}
                </span>
              </div>
            ))}
          </div>
          <div className="h-2 bg-gray-200 rounded-full mt-4">
            <div
              className="h-full bg-blue-500 rounded-full transition-all duration-300"
              style={{ width: `${(step / 4) * 100}%` }}
            ></div>
          </div>
        </div>

        {/* שלב 1 - בחירת סוג תשמ"ש */}
        {step === 1 && (
          <div className="fade-in">
            <h2 className="text-xl font-semibold mb-6 text-center">איזה תשמ"ש אתה רוצה?</h2>
            <div className="space-y-4">
              <div
                className={`p-5 border-2 rounded-lg cursor-pointer transition-all hover:shadow-md ${
                  tashmashType === 'worker' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'
                }`}
                onClick={() => setTashmashType('worker')}
              >
                <div className="flex items-center">
                  <div
                    className={`w-5 h-5 rounded-full border-2 mr-3 flex-shrink-0 ${
                      tashmashType === 'worker' ? 'border-blue-500 bg-blue-500' : 'border-gray-300'
                    }`}
                  >
                    {tashmashType === 'worker' && (
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white" className="w-4 h-4">
                        <path d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" />
                      </svg>
                    )}
                  </div>
                  <div>
                    <h3 className="font-medium text-lg">תשמ"ש עובדת</h3>
                    <p className="text-gray-600 mt-1">נדרש שההכנסה תהיה בטווח של 5,880–6,246 ש"ח</p>
                  </div>
                </div>
              </div>
              <div
                className={`p-5 border-2 rounded-lg cursor-pointer transition-all hover:shadow-md ${
                  tashmashType === 'pregnancy' ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-blue-200'
                }`}
                onClick={() => setTashmashType('pregnancy')}
              >
                <div className="flex items-center">
                  <div
                    className={`w-5 h-5 rounded-full border-2 mr-3 flex-shrink-0 ${
                      tashmashType === 'pregnancy' ? 'border-blue-500 bg-blue-500' : 'border-gray-300'
                    }`}
                  >
                    {tashmashType === 'pregnancy' && (
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white" className="w-4 h-4">
                        <path d="M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z" />
                      </svg>
                    )}
                  </div>
                  <div>
                    <h3 className="font-medium text-lg">תשמ"ש הריון (משבוע 14)</h3>
                    <p className="text-gray-600 mt-1">אין סף הכנסה מינימלי</p>
                  </div>
                </div>
              </div>
            </div>
            <div className="mt-8 flex justify-end">
              <button
                onClick={nextStep}
                disabled={!tashmashType}
                className={`px-5 py-2 rounded-lg transition-all flex items-center ${
                  tashmashType ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-200 text-gray-400 cursor-not-allowed'
                }`}
              >
                המשך
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clipRule="evenodd" />
                </svg>
              </button>
            </div>
          </div>
        )}

        {/* שלב 2 - פרטי השכר */}
        {step === 2 && (
          <div className="fade-in">
            <h2 className="text-xl font-semibold mb-6 text-center">פרטי השכר (3 חודשים אחרונים)</h2>
            <div className="mb-4 p-3 bg-blue-50 rounded-lg text-sm text-blue-700 flex items-start">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2 flex-shrink-0 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
              </svg>
              <div>
                הערה: יחושב ממוצע של שלושת התלושים יחד ובניכוי 484 ש"ח קבוע × 0.7
              </div>
            </div>
            {salaries.map((salary, index) => (
              <div key={index} className="mb-6 p-5 border border-gray-200 rounded-lg bg-white shadow-sm hover:shadow-md transition-all">
                <div className="flex items-center mb-3">
                  <div className="w-8 h-8 rounded-full bg-blue-100 text-blue-500 flex items-center justify-center mr-2">
                    {index + 1}
                  </div>
                  <h3 className="font-medium">חודש {index + 1}</h3>
                </div>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      סכום ברוטו (₪)
                    </label>
                    <div className="relative">
                      <input
                        type="number"
                        value={salary.gross}
                        onChange={(e) => updateSalary(index, 'gross', e.target.value)}
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-300 focus:border-blue-500 outline-none transition-all"
                        placeholder="הזן סכום ברוטו"
                      />
                      <div className="absolute inset-y-0 left-0 flex items-center px-3 pointer-events-none text-gray-500">
                        ₪
                      </div>
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      ניכויי חובה (₪)
                    </label>
                    <div className="relative">
                      <input
                        type="number"
                        value={salary.mandatoryDeductions}
                        onChange={(e) => updateSalary(index, 'mandatoryDeductions', e.target.value)}
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-300 focus:border-blue-500 outline-none transition-all"
                        placeholder="הזן ניכויי חובה"
                      />
                      <div className="absolute inset-y-0 left-0 flex items-center px-3 pointer-events-none text-gray-500">
                        ₪
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
            <div className="mt-8 flex justify-between">
              <button
                onClick={prevStep}
                className="px-5 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-all flex items-center"
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clipRule="evenodd" />
                </svg>
                חזרה
              </button>
              <button
                onClick={nextStep}
                disabled={!salaries.some((s) => s.gross)}
                className={`px-5 py-2 rounded-lg transition-all flex items-center ${
                  salaries.some((s) => s.gross) ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-200 text-gray-400 cursor-not-allowed'
                }`}
              >
                המשך
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clipRule="evenodd" />
                </svg>
              </button>
            </div>
          </div>
        )}

        {/* שלב 3 - פרטים נוספים */}
        {step === 3 && (
          <div className="fade-in">
            <h2 className="text-xl font-semibold mb-6 text-center">פרטים נוספים</h2>
            <div className="space-y-6">
              <div className="p-5 border border-gray-200 rounded-lg bg-white shadow-sm hover:shadow-md transition-all">
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  מצב חשבון בנק וחסכונות (₪)
                </label>
                <div className="relative">
                  <input
                    type="number"
                    value={bankBalance}
                    onChange={(e) => setBankBalance(e.target.value)}
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-300 focus:border-blue-500 outline-none transition-all"
                    placeholder="הזן סכום כולל"
                  />
                  <div className="absolute inset-y-0 left-0 flex items-center px-3 pointer-events-none text-gray-500">
                    ₪
                  </div>
                </div>
                <p className="text-xs text-gray-500 mt-2 flex items-start">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1 flex-shrink-0 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
                  </svg>
                  אם הסכום עולה על 44,000 ש"ח, כל 150 ש"ח מעבר לסכום זה ייחשבו כשקל הכנסה נוסף
                </p>
              </div>
              <div className="p-5 border border-gray-200 rounded-lg bg-white shadow-sm hover:shadow-md transition-all">
                <label className="block text-sm font-medium text-gray-700 mb-4">
                  האם יש רכב בבעלות המשפחה?
                </label>
                <div className="flex space-x-4 mb-2">
                  <button
                    type="button"
                    onClick={() => setHasCar(true)}
                    className={`px-4 py-2 rounded-lg transition-all ml-4 ${hasCar ? 'bg-blue-500 text-white' : 'border border-gray-300 hover:bg-gray-50'}`}
                  >
                    כן
                  </button>
                  <button
                    type="button"
                    onClick={() => {
                      setHasCar(false);
                      setCarValue('');
                    }}
                    className={`px-4 py-2 rounded-lg transition-all ${!hasCar ? 'bg-blue-500 text-white' : 'border border-gray-300 hover:bg-gray-50'}`}
                  >
                    לא
                  </button>
                </div>
              </div>
              {hasCar && (
                <div className="p-5 border border-gray-200 rounded-lg bg-white shadow-sm hover:shadow-md transition-all">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    שווי הרכב לפי מחירון לוי יצחק משוקלל (₪)
                  </label>
                  <div className="relative">
                    <input
                      type="number"
                      value={carValue}
                      onChange={(e) => setCarValue(e.target.value)}
                      className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-300 focus:border-blue-500 outline-none transition-all"
                      placeholder="הזן שווי רכב"
                    />
                    <div className="absolute inset-y-0 left-0 flex items-center px-3 pointer-events-none text-gray-500">
                      ₪
                    </div>
                  </div>
                  <p className="text-xs text-red-500 mt-2 flex items-start">
                    <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1 flex-shrink-0 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                      <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                    </svg>
                    אם הרכב שווה מעל 44,611 ש"ח, הזכות לתשמ"ש מתבטלת
                  </p>
                </div>
              )}
            </div>
            <div className="mt-8 flex justify-between">
              <button
                onClick={prevStep}
                className="px-5 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-all flex items-center"
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clipRule="evenodd" />
                </svg>
                חזרה
              </button>
              <button
                onClick={nextStep}
                className="px-5 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-all flex items-center"
              >
                חשב זכאות
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
              </button>
            </div>
          </div>
        )}

        {/* שלב 4 - תוצאות */}
        {step === 4 && result && (
          <div className="fade-in">
            <h2 className="text-xl font-semibold mb-6 text-center">תוצאות החישוב</h2>

            {/* כותרת התוצאה */}
            <div
              className={`p-5 rounded-lg mb-6 text-center ${
                result.eligible ? 'bg-green-100 border border-green-200' : 'bg-red-100 border border-red-200'
              }`}
            >
              <div
                className={`w-16 h-16 mx-auto rounded-full flex items-center justify-center mb-3 ${
                  result.eligible ? 'bg-green-500' : 'bg-red-500'
                }`}
              >
                {result.eligible ? (
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                  </svg>
                ) : (
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-white" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M4.293 4.293a1 1 0
